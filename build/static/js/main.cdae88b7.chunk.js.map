{"version":3,"sources":["actions/types.js","reducers/index.js","reducers/reducer_user_type.js","reducers/reducer_index.js","reducers/reducer_vars.js","reducers/reducer_error.js","reducers/reducer_range.js","reducers/reducer_results.js","helpers/helper-functions.js","helpers/business-calc.js","helpers/individual-calc.js","actions/index.js","helpers/validate-input.js","questions.js","components/Question.js","components/ProgressBar.js","components/BusinessResults.js","components/MessageBox.js","components/ContributionsRow.js","components/IndividualResults.js","components/Results.js","components/StartCard.js","components/ErrorContainer.js","App.js","index.js"],"names":["SET_USER_TYPE","INCREMENT_INDEX","DECREMENT_INDEX","SET_VARS","UPDATE_VAR","SET_ERROR","UPDATE_RANGE","BUSINESS_RESULTS","INDIVIDUAL_RESULTS","rootReducer","combineReducers","userType","state","arguments","length","undefined","action","type","payload","index","vars","newVars","Object","toConsumableArray","variable","error","range","results","console","log","addCommas","x","toString","replace","removeCommas","rmDecAndRound","input","match","parseInt","businessCalc","a","b","newPercentage","futureCost","individualCalc","screen2","screen3","screen4","screen5","screen6","screen7","screen8","screen9","screen10","fpl1808","fpl18","premium","income","capitalGainsContribution","householdPremium","healthcareContributionFromWages","healthcareContributionFromSelfEmployment","sizeOfHousehold","numberOfAdults","adjustedGrossIncome","grossPayPerYear","soleProprietorIncome","capitalGains","currentPremiums","currentAdditionalMedical","fpl","size","extra","currentCosts","Math","round","fplCheck","houseHoldIncome","prem","ltcg","totalPersonalContribution","savings","setUserType","incIndex","decIndex","setVars","updateVar","updateRange","setError","message","getBusinessResults","apply","getIndividualResults","validateInput","question","inputType","status","min","val","max","questions","individual","questionText","tip","showIcon","id","defaultValue","tipSize","unit","business","options","Question","handleBackBtn","_this$props","_this","props","handleFwdBtn","e","_this$props2","refs","value","_validateInput","handleKeyPress","stringValue","charValue","key","indexOf","preventDefault","handleChange","target","handleSubmit","nativeEvent","_validateInput2","handleRange","this","focus","lBtnVisibile","_this$props3","_this$props3$question","link","questionArray","rBtnVisibile","visibility","react_default","createElement","onSubmit","className","onChange","onKeyPress","autoFocus","ref","map","item","onClick","style","fontSize","height","Parser","href","Component","connect","_ref","el","i","CalculationDocs","margin","rel","BusinessResults","colorBarGreen","rangeStyle","resultStyle","annualCost","concat","BusinessResults_CalculationDocs","MessageBox","ContributionsRow","title","contribution","floor","IndividualResults","_ref$results","components_MessageBox","components_ContributionsRow","IndividualResults_CalculationDocs","Results","getResult","width","components_BusinessResults","components_IndividualResults","StartCard","handleUserType","App","nextProps","app_position","start","progress","end","components_ErrorContainer","components_StartCard","components_Question","components_ProgressBar","components_Results","actions","root","document","getElementById","ReactDOM","render","es","store","createStore","reducers","src_App"],"mappings":"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","file":"static/js/main.cdae88b7.chunk.js","sourcesContent":["export const SET_USER_TYPE = 'SET_USER_TYPE';\nexport const INCREMENT_INDEX = 'INCREMENT_INDEX';\nexport const DECREMENT_INDEX = 'DECREMENT_INDEX';\nexport const SET_VARS = 'SET_VARS';\nexport const UPDATE_VAR = 'UPDATE_VAR';\nexport const SET_ERROR = 'SET_ERROR';\nexport const UPDATE_RANGE = 'UPDATE_RANGE';\nexport const BUSINESS_RESULTS = 'BUSINESS_RESULTS';\nexport const INDIVIDUAL_RESULTS = 'INDIVIDUAL_RESULTS';\n","import { combineReducers } from 'redux';\nimport UserTypeReducer from './reducer_user_type';\nimport IndexReducer from './reducer_index';\nimport VarsReducer from './reducer_vars';\nimport ErrorReducer from './reducer_error';\nimport RangeReducer from './reducer_range';\nimport ResultsReducer from './reducer_results';\n\nconst rootReducer = combineReducers({\n  userType: UserTypeReducer,\n  index: IndexReducer,\n  vars: VarsReducer,\n  error: ErrorReducer,\n  range: RangeReducer,\n  results: ResultsReducer\n});\n\nexport default rootReducer;\n","import {SET_USER_TYPE} from '../actions/types';\n\nexport default function(state = '', action){\n  switch(action.type){\n    case SET_USER_TYPE:\n    return action.payload;\n    default:\n    return state;\n  }\n};\n","import { INCREMENT_INDEX, DECREMENT_INDEX } from '../actions/types';\n\nexport default function(state = -1, action){\n  let newState = state;\n  switch(action.type){\n    case INCREMENT_INDEX:\n      newState = state + 1;\n      return newState;\n    case DECREMENT_INDEX:\n      newState = state - 1;\n      return newState;\n    default:\n    return state;\n  }\n};\n","import {SET_VARS, UPDATE_VAR} from '../actions/types';\n\nexport default function(state = [], action){\n  switch(action.type){\n    case SET_VARS:\n      return action.payload;\n    case UPDATE_VAR:\n      let newVars = [...state];\n      newVars[action.payload.index] = action.payload.variable;\n      return newVars;\n    default:\n    return state;\n  }\n};\n","import { SET_ERROR } from '../actions/types';\n\nexport default function(state = '', action){\n  switch(action.type){\n    case SET_ERROR:\n      return action.payload;\n    default:\n    return state;\n  }\n};\n","import { UPDATE_RANGE } from '../actions/types';\n\nexport default function(state = 50, action){\n  switch(action.type){\n    case UPDATE_RANGE:\n      return action.payload;\n    default:\n    return state;\n  }\n};\n","import { INDIVIDUAL_RESULTS, BUSINESS_RESULTS } from '../actions/types';\n\nexport default function(state = {}, action){\n  switch(action.type){\n    case INDIVIDUAL_RESULTS:\n      return action.payload;\n    case BUSINESS_RESULTS:\n    console.log(action.payload);\n      return action.payload;\n    default:\n    return state;\n  }\n};\n","export const addCommas = (x) => {\n\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const removeCommas = (x) => {\n\treturn x.toString().replace(/,/g, '');\n};\n\nexport const rmDecAndRound = (input) => {\n  if(!input.match(/>|<|-/)){\n    return input = parseInt(removeCommas(input),10);\n  }else{\n    return input;\n  }\n};\n","import { removeCommas } from './helper-functions';\n\nexport const businessCalc = (a,b)=>{\n\tlet newPercentage = 0;\n\tswitch (a) {\n\tcase '<10':\n\t\tnewPercentage = 0.0641;\n\t\tbreak;\n\tcase '10-24':\n\t\tnewPercentage = 0.0499;\n\t\tbreak;\n\tcase '25-99':\n\t\tnewPercentage = 0.0565;\n\t\tbreak;\n\tcase '100-999':\n\t\tnewPercentage = 0.055;\n\t\tbreak;\n\tcase '>1000':\n\t\tnewPercentage = 0.0613;\n\t\tbreak;\n\tdefault:\n\t\tnewPercentage = 0;\n\t}\n\tconst futureCost = parseInt(parseInt(removeCommas(b),10) * newPercentage, 10);\n\treturn { futureCost };\n};\n","import { removeCommas } from './helper-functions';\n\n/* TODO:  The original code used vars a,b,c, etc. and didn't allow for \n * changes in page order.  So *important* for now this still depends on\n * page order but of course this should be improved!\n */\n\nexport const individualCalc = (\n\tscreen2, // sizeOfHousehold \n\tscreen3, // numberOfAdults\n\tscreen4, // adjustedGrossIncome\n\tscreen5, // grossPayPerYear\n\tscreen6, // soleProprietorIncome\n\tscreen7, // capitalGains\n\tscreen8, // currentPremiums\n\tscreen9, // currentAdditionalMedical\n\tscreen10, // info only, no input, no calc.\n\t)=>{\n\tconst\n\t\tprem = 134,\n\t\tfpl1808 = 4320,\n\t\tfpl18 = [0,\n\t\t\t12140,\n\t\t\t16460,\n\t\t\t20780,\n\t\t\t25100,\n\t\t\t29420,\n\t\t\t33740,\n\t\t\t38060,\n\t\t\t42380\n\t\t];\n\n\tlet\n\t\tpremium = 0,\n\t\tincome = 0,\n\t\tcapitalGainsContribution = 0,\n\t\thouseholdPremium = 0,\n\t\thealthcareContributionFromWages = 0,\n\t\thealthcareContributionFromSelfEmployment = 0,\n\t\tsizeOfHousehold = parseInt(screen2,10),\n\t\tnumberOfAdults = parseInt(screen3, 10),\n\t\tadjustedGrossIncome = parseInt(removeCommas(screen4),10),\n\t\tgrossPayPerYear = parseInt(screen5,10),\n\t\tsoleProprietorIncome = parseInt(screen6,10),\n\t\tcapitalGains = parseInt(removeCommas(screen7),10),\n\t\tcurrentPremiums = parseInt(removeCommas(screen8),10),\n\t\tcurrentAdditionalMedical = parseInt(removeCommas(screen9),10);\n\n\tfunction fpl(size) {\n\t\tif (size > 8) {\n\t\t\tlet extra = size - 8;\n\t\t\textra *= fpl1808;\n\t\t\treturn (fpl18[8] + extra);\n\t\t} else {\n\t\t\treturn fpl18[size];\n\t\t}\n\t}\n\n\tif(parseInt(grossPayPerYear, 10) < 15000) {\n\t\thealthcareContributionFromWages = 0;\n\t} else if (parseInt(grossPayPerYear, 10) > 15000 && parseInt(grossPayPerYear, 10) <= 60000) {\n\t\thealthcareContributionFromWages = \n\t\t\t(parseInt(grossPayPerYear, 10) - (15000 - parseInt(grossPayPerYear, 10) * .25)) * .02;\n\t} else if  (parseInt(grossPayPerYear, 10) > 60000) {\n\t\thealthcareContributionFromWages = parseInt(grossPayPerYear, 10) * .02;\n\t}\n\n\tif(parseInt(soleProprietorIncome, 10) < 15000) {\n\t\thealthcareContributionFromSelfEmployment = 0;\n\t} else if (parseInt(soleProprietorIncome, 10) > 15000 && parseInt(soleProprietorIncome, 10) <= 60000) {\n\t\thealthcareContributionFromSelfEmployment = \n\t\t\t(parseInt(soleProprietorIncome, 10) - (15000 - parseInt(soleProprietorIncome, 10) * .25)) * .02;\n\t} else if  (parseInt(soleProprietorIncome, 10) > 60000) {\n\t\thealthcareContributionFromSelfEmployment = parseInt(soleProprietorIncome, 10) * .02;\n\t}\n\n\tconst currentCosts = currentPremiums + (Math.round(currentAdditionalMedical/12));\n\tconst fplCheck = fpl(sizeOfHousehold);\n\tconst houseHoldIncome = adjustedGrossIncome + capitalGains;\n\tif(fplCheck*2 <= houseHoldIncome && fplCheck*2.33 >= houseHoldIncome){\n\t\tpremium = ((prem*.25)*12);\n\t\thouseholdPremium = ((prem*.25*numberOfAdults)*12);\n\t} else if(fplCheck*2.33 < houseHoldIncome && fplCheck*2.67 >= houseHoldIncome){\n\t\tpremium = ((prem*.5)*12);\n\t\thouseholdPremium = ((prem*.5*numberOfAdults)*12);\n\t} else if(fplCheck*2.67 < houseHoldIncome && fplCheck*3 > houseHoldIncome){\n\t\tpremium = ((prem*.75)*12);\n\t\thouseholdPremium = ((prem*.75*numberOfAdults)*12);\n\t} else if(fplCheck*3 < houseHoldIncome){\n\t\tpremium = (prem*12);\n\t\thouseholdPremium = ((prem*numberOfAdults)*12);\n\t} else{\n\t}\n\n\tif(adjustedGrossIncome < 15000){\n\t\tincome = 0;\n\t}else if(adjustedGrossIncome >= 15000){\n\t\tincome = parseInt(((adjustedGrossIncome-15000)*0.01),10);\n\t}\n\n\tif(capitalGains < 15000){\n\t\tcapitalGainsContribution = 0;\n\t}else if(parseInt(capitalGains,10) >= 15000 && parseInt(capitalGains,10) < 60000){\n\t\tconst ltcg = (15000 - (parseInt(capitalGains,10)*0.25));\n\t\tcapitalGainsContribution = ((parseInt(capitalGains,10)-parseInt(ltcg,10))*0.085);\n\t}else if(parseInt(capitalGains,10) >= 60000){\n\t\tcapitalGainsContribution = (parseInt(capitalGains,10)*0.085);\n\t}\n\n\tif(parseInt(sizeOfHousehold,10) === 1 && parseInt(numberOfAdults,10) === 0){\n\t\tincome = 0;\n\t\tcapitalGainsContribution = 0;\n\t\tpremium = 0;\n\t}\n\n\tconst totalPersonalContribution = parseInt(income,10) + parseInt(capitalGainsContribution,10) + \n\t\tparseInt(premium, 10) + parseInt(healthcareContributionFromSelfEmployment, 10) + \n\t\tparseInt(healthcareContributionFromWages, 10);\n\n\tlet savings = 0;\n\tif(sizeOfHousehold<2){\n\t\tsavings = parseInt(currentCosts*12,10) - totalPersonalContribution;\n\t}else{\n\t\tsavings = parseInt(currentCosts*12,10) - ((parseInt(premium,10) * parseInt(numberOfAdults,10)) + parseInt(capitalGainsContribution,10) + (parseInt(income,10)));\n\t}\n\treturn { \n\t\tfpl, income, numberOfAdults, sizeOfHousehold, savings, capitalGainsContribution, \n\t\thouseholdPremium, premium, totalPersonalContribution, currentCosts, \n\t\tcurrentAdditionalMedical, currentPremiums, healthcareContributionFromWages, healthcareContributionFromSelfEmployment };\n};\n","import { SET_USER_TYPE } from './types';\nimport { INCREMENT_INDEX, DECREMENT_INDEX, SET_VARS, UPDATE_VAR, SET_ERROR, UPDATE_RANGE, BUSINESS_RESULTS, INDIVIDUAL_RESULTS } from './types';\n\nimport { businessCalc } from '../helpers/business-calc';\nimport { individualCalc } from '../helpers/individual-calc';\n\nexport function setUserType(userType){\n  return {\n    type: SET_USER_TYPE,\n    payload: userType\n  }\n}\n\nexport function incIndex(){\n  return {\n    type: INCREMENT_INDEX\n  }\n}\n\nexport function decIndex(){\n  return {\n    type: DECREMENT_INDEX\n  }\n}\n\nexport function setVars(vars){\n  return {\n    type: SET_VARS,\n    payload: vars\n  }\n}\n\nexport function updateVar(variable, index){\n  return {\n    type: UPDATE_VAR,\n    payload: {variable, index}\n  }\n}\n\nexport function updateRange(variable){\n  return{\n    type: UPDATE_RANGE,\n    payload: variable\n  }\n}\n\nexport function setError(message){\n  return {\n    type: SET_ERROR,\n    payload: message\n  }\n}\n\nexport function getBusinessResults(...data){\n  const results = businessCalc(...data);\n  console.log(results);\n  return {\n    type: BUSINESS_RESULTS,\n    payload: results\n  }\n}\n\nexport function getIndividualResults(...data){\n  const results = individualCalc(...data);\n  return {\n    type: INDIVIDUAL_RESULTS,\n    payload: results\n  }\n}\n","export const validateInput = (question, vars, input) => {\n  // New \"Question\" type if for informational card, no question, inputType = ''\n  if (question.inputType === '') {\n    return {error: null, status: true};\n  }\n  // If it's empty\n  if (!input) {\n    const error = 'This field is required!';\n    return {error, status: false};\n  }\n  // else if it has a 'min' option\n  else if (question.min && parseInt(input, 10) < question.min.val) {\n    const error = question.min.error;\n    return {error, status: false};\n  }\n  else if (\n    question.max &&\n    typeof question.max.val === 'string' &&\n    parseInt(input, 10) > vars[0]\n  )\n  {\n    const error = question.max.error;\n    return {error, status: false};\n  }\n  else if (question.max && (typeof question.max.val === 'number') &&\n    parseInt(input, 10) > question.max.val\n  ) {\n    const error = question.max.error;\n    return {error, status: false};\n  }\n  return {error: null, status: true};\n};\n","const questions = {\n\tindividual:[\n\t\t{\n\t\t\tquestionText:\"Size of Your Household\",\n\t\t\tinputType:'number',\n\t\t\tmin:{\n\t\t\t\tval: 1,\n\t\t\t\terror: 'Please enter a household size greater than zero.'\n\t\t\t},\n\t\t\tmax:{\n\t\t\t\tval: 20,\n\t\t\t\terror:'Please enter a household size between 1-20.'\n\t\t\t},\n\t\t\ttip:'The size of your household includes yourself, your spouse if you have ' +\n\t\t\t\t'one, and any individuals that qualify as dependents.<br><br><br>  This will be used to ' +\n\t\t\t\t'determine where your household falls on the Federal Poverty Level, which will ' +\n\t\t\t\t'then be used to determine your Monthly Premium.',\n      showIcon:true,\n      id: 'soh'\n\t\t},\n\t\t{\n\t\t\tquestionText:\"Number of Adults over 19\",\n\t\t\tinputType:'number',\n\t\t\tmax:{\n\t\t\t\tval: 'Size of Your Household',\n\t\t\t\terror:'Number of Adults over 19 cannot exceed total household size!'\n\t\t\t},\n\t\t\tdefaultValue:1,\n\t\t\ttip: 'This will be used to determine where your household falls on the ' +\n\t\t\t\t'Federal Poverty Level, which will then be used to determine your ' +\n\t\t\t\t'Monthly Premium',\n\t\t\ttipSize: '1.3em',\n      showIcon:false,\n      id: 'noa'\n\t\t},\n\t\t{\n\t\t\tquestionText:\"Your Adjusted Gross Income (AGI)\",\n\t\t\tinputType:'text',\n\t\t\tunit:'$',\n\t\t\ttip: \"<p>Adjusted gross income (AGI) is an individual or joint couple's \" +\n\t\t\t\t'total gross income minus specific deductions. Use your AGI, NOT gross ' +\n\t\t\t\t\" income. To find your AGI, refer to last year's tax return or use the \" +\n\t\t\t\t'<a href=\"http://money.cnn.com/tmp/networth2.html\">AGI Calculator</a>.' +\n\t\t\t\t'</p><table class=\"agi-table\"><tr><th><strong>If you filed...</strong>' +\n\t\t\t\t'</th><th><strong>Look for line...</strong></th></tr><tr><td>Form 1040</td>' +\n\t\t\t\t'<td>37</td></tr><tr><td>Form 1040A (2017)</td><td>21</td></tr><tr><td>' +\n\t\t\t\t'Form 1040EZ (2017)</td><td>4</td></tr></table>' + \n\t\t\t\t'<p>Your Monthly Premium amount depends on where you fall on the Federal ' +\n\t\t\t\t'Poverty Level using Modified Adjusted Gross Income (MAGI).  For most, ' +\n\t\t\t\t'or similar to MAGI.  If you know your MAGI, enter it above, but for the ' +\n\t\t\t\t'purpose of this estimator, AGI is sufficient.</p>',\n\t\t\ttipSize:'0.8em',\n//\t\t\tlink:['http://money.cnn.com/tmp/networth2.html','Take me to the AGI Calculator first...'],\n      showIcon:true,\n      id: 'agi'\n\t\t},\n\t\t{\n\t\t\tquestionText: \"Gross Pay Per Year - Wages from an Employer\",\n\t\t\tinputType:'text',\n\t\t\tunit:'$',\n\t\t\ttip: 'These are your wages from an employer.  If you are 65 years or ' +\n\t\t\t\t\"older, enter '0'.<br><br>This amount is used to calculate your Personal Health Security \" +\n\t\t\t\t'Assessment from Payroll(link forthcoming).  Use your pay stubs to ' +\n\t\t\t\t'determine your gross pay for the year.  This tax is assessed quarterly ' +\n\t\t\t\t'and collected by your employer, and may be paid by your employer ' +\n\t\t\t\t'as a benefit of employment.',\n\t\t\tshowIcon:true,\n      id: 'gppy'\n\t\t},\n\t\t{\n\t\t\tquestionText:\"Sole Proprietor Income - Net Profits from Self-Employment\",\n\t\t\tinputType:'text',\n\t\t\tunit:'$',\n\t\t\ttip:'Use Line 31 from your Schedule C (2017 and 2018).<br><br>This amount is ' +\n\t\t\t\t'used to calculate your Personal Health Security Assessment from ' +\n\t\t\t\t'Self-Employment(link forthcoming).<br><br>If Net Profits from ' + \n\t\t\t\t'Self-Employment are less than $15,000, the individual is not subject ' +\n\t\t\t\t'to this assessment.<br><br>This tax is assessed yearly and paid with other ' +\n\t\t\t\t'business excise taxes.',\n      showIcon:true,\n      id: 'spi'\n\t\t},\n\t\t{\n\t\t\tquestionText:\"Your Net Long-Term Capital Gains\",\n\t\t\tinputType:'text',\n\t\t\tunit:'$',\n\t\t\ttip:'Net Long-Term Capital Gains are the profits made from investments ' +\n\t\t\t\t\t'held for longer than 12 months, for example, profits earned from the ' +\n\t\t\t\t\t'sale of stocks. This tax contribution will not apply to Home Sales, ' + \n\t\t\t\t\t'Farm Income or Retirement Accounts.<br><br>If you file Schedule D, ' +\n\t\t\t\t\t'look for line item 15.  This amount will be used to calculate your ' +\n\t\t\t\t\t'Investment Profit Contribution.' + \n\t\t\t\t\t\"<br><em>Next we'll review the insurance industry costs you get to \" +\n\t\t\t\t\t'<b>eliminate</b> from your current expenses...</em>',\n\t\t\tshowIcon:true,\n      id: 'ltcg'\n\t\t},\n\t\t{\n\t\t\tquestionText:\"Your Current Monthly Healthcare Premiums\",\n\t\t\tinputType:'text',\n\t\t\tunit:'$',\n\t\t\ttip:'<p>Include Monthly Premiums for Medical, Dental (if applicable) and Vision (if applicable).' +\n\t\t\t\t\t'</p> <p>Remember to include costs for each member of household.</p>',\n      showIcon:true,\n      id: 'hcprems'\n\t\t},\n\t\t{\n\t\t\tquestionText:\"Your Current Yearly Out-of-Pocket Costs\",\n\t\t\tinputType:'text',\n\t\t\tunit:'$',\n\t\t\ttip:'<p>Include costs incurred over the course of the year for every member of your ' +\n\t\t\t\t\t'household, such as:</p><ul><li>Co-Pays</li><li>Prescriptions<sup>*</sup></li>' +\n\t\t\t\t\t'<li>Medical bills not covered by insurance, including:</li>' + \n\t\t\t\t\t'<li>Dental, Vision, and Hearing expenses</li></ul><li>Emergency Room or Clinic Visits</li>' +\n\t\t\t\t\t'<li>Deductibles</li></ul>' + \n\t\t\t\t\t'Note: the most you\\'ll pay for prescriptions with I-1600 Universal Healthcare is $250' +\n\t\t\t\t\t'per adult per year.',\n\t\t\tshowIcon:true,\n      id:'yoopc'\n\t\t},\n\t\t{\n\t\t\tquestionText: \"Universal Healthcare Benefits\",\n\t\t\tinputType: '',\n\t\t\tunit: '',\n\t\t\ttip: 'Whether you save or pay a little more, there are undeniable ' + \n\t\t\t\t'benefits that apply to all. Most prescriptions are fully covered! ' +\n\t\t\t\t'And if you need a non-generic prescription, the most you’ll pay is ' +\n\t\t\t\t'$250 per year!  You can see the doctor you want. There are no ' +\n\t\t\t\t'networks to worry about. You won’t need separate plans for vision ' +\n\t\t\t\t'or dental or mental health services. They’re all included! Audiology ' +\n\t\t\t\t'too! Companies are still able to attract the best job candidates by ' +\n\t\t\t\t'paying for their employee’s premium and/or personal health assessment ' +\n\t\t\t\t'as part of benefits package. It’s up to them! There are no ' +\n\t\t\t\t'deductibles or surprise out-of-pocket costs. No one will go bankrupt ' +\n\t\t\t\t'because they got sick. Healthcare isn’t tied to a job or spouse or ' +\n\t\t\t\t'salary. This is real freedom!'\n\t\t}\n\t],\n\tbusiness:[\n\t\t{questionText:'Annual Total Payroll Costs', inputType:'text',unit:'$', tip: '&nbsp'},\n\t\t{questionText:'Current Annual Healthcare Costs', inputType:'text',unit:'$', tip: '&nbsp'},\n\t\t{questionText:'Total Number of Employees',\n\t\t\tinputType:'select-box',\n\t\t\ttip: '&nbsp',\n\t\t\toptions: ['<10',\"10-24\",\"25-99\",\"100-999\",\">1000\"]\n\t\t},\n\t\t{questionText:'Percentage of Employees Covered', inputType:'range',\n\t\t\ttip: 'Use the slider to indicate the Percentage of Employees Covered. ' + \n\t\t\t\t'Include part-time employees when selecting your percentage. '\n\t\t}\n\t]\n};\n\nexport default questions;\n","import React, { Component } from 'react';\nimport Parser from 'html-react-parser';\nimport { connect } from 'react-redux';\nimport { removeCommas, addCommas } from '../helpers/helper-functions';\nimport { updateVar, incIndex, setError, updateRange, decIndex } from '../actions';\nimport { validateInput } from '../helpers/validate-input';\n// import '../css/Header.css';\nimport questions from '../questions';\n\nclass Question extends Component {\n\n  // Always maintain focus on input\n  componentDidUpdate() {\n    if(this.refs.input) {\n      this.refs.input.focus();\n    }\n  }\n\n  handleBackBtn = () => {\n    const {index, decIndex, setError} = this.props;\n    if(index >= 0){\n      setError(null);\n      decIndex();\n    }\n  }\n\n  handleFwdBtn = (e) => {\n    const { vars, index, incIndex, setError, updateVar } = this.props;\n    const input = vars[index] || this.refs.input.value;\n    const {error, status} = validateInput(this.props.question, this.props.vars, input);\n    if (index > -1){\n      if(status && !error){\n        incIndex();\n        setError(null);\n        updateVar(input, this.props.index);\n      }else{\n        setError(error);\n      }\n    }\n  }\n\n\n  // Disallow invalid characters from all input fields\n  handleKeyPress = (e) => {\n    const allowed = '0123456789';\n    function contains(stringValue, charValue){\n      return stringValue.indexOf(charValue) > -1;\n    }\n    const invalidKey = e.key.length === 1 && !contains(allowed, e.key);\n    invalidKey && e.preventDefault();\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let variable = addCommas(removeCommas(e.target.value));\n    const index = this.props.index;\n    this.props.updateVar(variable, index);\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let input = e.nativeEvent.target[0].value;\n    const {error, status} = validateInput(this.props.question, this.props.vars, input);\n    if(status && !error){\n      this.props.incIndex();\n      this.props.setError(null);\n      this.props.updateVar(input, this.props.index);\n    }else{\n      this.props.setError(error);\n    }\n  };\n\n  handleRange = (e) => {\n    const range = e.target.value;\n    this.props.updateRange(range);\n    this.props.updateVar(range, this.props.index);\n  }\n\n  render() {\n    const {question: { id, showIcon, questionText, unit, inputType, options, tip, link, tipSize}, vars, index, range, questionArray} = this.props;\n\n    let lBtnVisibile, rBtnVisibile={};\n    if(index<0){\n      lBtnVisibile = {visibility:'hidden'}\n    };\n    if(index===-1 || (index>0 && !questionArray[index])){\n      rBtnVisibile = {visibility:'hidden'}\n    }\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"wwse-label\">\n          <h3>{questionText}</h3>\n        </div>\n        <div className=\"wwse-input-box\">\n        {unit && <i className=\"fa fa-1x fa-usd wwse-dollar-sign\"></i>}\n\n        {inputType === 'number' &&\n          <input\n            key={id}\n            onChange={this.handleChange}\n            className=\"wwse-number-box\"\n            type=\"number\"\n            onKeyPress={this.handleKeyPress}\n            value={vars[index] ? vars[index] : ''}\n            autoFocus\n            ref=\"input\"\n          >\n          </input>}\n\n        {inputType === 'text' &&\n\n          <input\n            key={id}\n            onChange={this.handleChange}\n            className=\"wwse-number-box\"\n            type=\"text\"\n            onKeyPress={this.handleKeyPress}\n            value={vars[index] ? vars[index] : ''}\n            autoFocus\n            ref=\"input\"\n          >\n          </input>}\n\n        {inputType === 'select-box' &&\n          <select\n            defaultValue={vars[index]}\n            onChange={this.handleChange}\n            className=\"wwse-select-input\"\n            ref=\"input\"\n          >\n            {options.map((item, index) => {\n              return <option key={index} value={item}>{item}</option>\n            })}\n          </select>\n        }\n\n        {inputType === 'range' &&\n          <div className=\"wwse-slidecontainer\">\n            <input onChange={this.handleRange} type=\"range\" min=\"0\" max=\"100\"\n              ref=\"input\"\n              value={vars[index] ? vars[index] : 50} className=\"wwse-slider\" id=\"myRange\"></input>\n            <span className=\"wwse-range\">{range}%</span>\n          </div>\n        }\n        </div>\n\n        <div className=\"wwse-controls\">\n          <div>\n            <a onClick={(e)=>e.preventDefault()}>\n              <div className=\"wwse-circle\">\n                <i\n                  style={lBtnVisibile} onClick={this.handleBackBtn}\n                  className=\"fa fa-2x fa-chevron-left\">\n                </i>\n              </div>\n            </a>\n          </div>\n          <div>\n            <button\n              className=\"submit\"\n              type=\"submit\">\n              Next\n            </button>\n          </div>\n          <div>\n            <a onClick={(e)=>e.preventDefault()}>\n              <div className=\"wwse-circle\">\n                <i\n                  style={rBtnVisibile}\n                  onClick={this.handleFwdBtn}\n                  className=\"fa fa-2x fa-chevron-right\">\n                </i>\n              </div>\n            </a>\n          </div>\n        </div>\n\n        {tip &&\n          <div\n            className=\"wwse-info\"\n            style={{fontSize:tipSize}}\n          >\n          <div className=\"wwse-info-icon\">\n            {showIcon ?\n              <i className=\"fa fa-2x fa-info-circle\"></i>\n              :\n              <div style={{height:'30px'}}>&nbsp;</div>\n            }\n          </div>\n            {Parser(tip)}\n            <a href={link && link[0]} target=\"_blank\">{link && link[1]}</a>\n          </div>\n        }\n      </form>\n    );\n  }\n};\n\nfunction mapStateToProps(state){\n  return{\n    vars: state.vars,\n    index: state.index,\n    questionArray: questions[state.userType],\n    range: state.range\n  }\n}\n\nexport default connect(mapStateToProps, {updateVar, decIndex, incIndex, setError, updateRange})(Question);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport questions from '../questions';\n\nconst ProgressBar = ({index, questionArray}) => {\n\treturn (\n\t\t<div className=\"wwse-progress-bar\">\n\t\t\t{questionArray && questionArray.map((el, i) => {\n\t\t\t\tif (i <= index) {\n\t\t\t\t\treturn <div key={i} className=\"progress-point-active\"></div>\n\t\t\t\t} else {\n\t\t\t\t\treturn <div key={i} className=\"progress-point\"></div>\n\t\t\t\t}\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nfunction mapStateToProps(state){\n  return{\n    index: state.index,\n    questionArray: questions[state.userType]\n  }\n}\n\nexport default connect(mapStateToProps)(ProgressBar);\n","import React from \"react\";\nimport { addCommas, removeCommas } from '../helpers/helper-functions';\n\nconst CalculationDocs = () => {\n  return(\n    <a style={{fontSize:'0.9em', margin:'1.5em auto'}} href=\"https://wholewashington.nationbuilder.com/savings_estimator_business_calculations\" rel=\"noopener noreferrer\" target=\"_blank\">Calculation Documentation</a>\n  );\n};\n\nconst BusinessResults = ({\n    results: { futureCost },\n    vars,\n    colorBarGreen,\n    rangeStyle,\n    range,\n    resultStyle\n  }) => {\n\n  const annualCost = parseInt(removeCommas(vars[1]),10);\n\n  return (\n    <div className={`wwse-results ${resultStyle}`}>\n      {annualCost - futureCost > 0 ? [\n        <div className=\"wwse-cost-bars-container\" key=\"bars-cont\">\n          <div className=\"wwse-results-box wwse-results-box-business\">\n            <h3>Current Annual Healthcare Costs</h3>\n          </div>\n          <div className=\"wwse-color-bar-box\">\n            <div className=\"wwse-color-bar wwse-color-bar-current\">\n              <span className=\"wwse-color-bar-text\">${addCommas(annualCost)}</span>\n            </div>\n          </div>\n          <div className=\"wwse-results-box wwse-results-box-business\">\n            <h3>Projected Annual Healthcare Costs</h3>\n          </div>\n          <div className=\"wwse-color-bar-box\">\n            <div style={colorBarGreen} className=\"wwse-color-bar wwse-color-bar-projected\">\n              <span className=\"wwse-color-bar-text wwse-color-bar-text-projected\">${addCommas(futureCost)}</span>\n            </div>\n          </div>\n        </div>\n  ] :[\n      <div key=\"no-savings\" className=\"wwse-results-box wwse-results-box-business\">\n          <h3>Your Benefit</h3>\n      </div>,\n      <div key=\"message-box\" className=\"wwse-message-box wwse-message-box-business\">\n        <p>Universal Healthcare means high quality, comprehensive coverage (including vision and dental) for every employee, regardless of number of hours worked. A healthy work force is a more productive work force.</p>\n      </div>\n  ]\n    }\n\n      <div className=\"wwse-percentages\">\n        <div className=\"wwse-row\">\n          <p>\n            Employees Covered<br />Under Current System\n          </p>\n          <p>\n            Employees Covered<br />with Whole Washington Health Trust\n          </p>\n        </div>\n        <div className=\"wwse-row\">\n          <div className=\"wwse-col\">\n            <span\n              style={rangeStyle}\n              className=\"wwse-percentage wwse-result-percentage\"\n            >\n              {range}%\n            </span>\n          </div>\n          <div className=\"wwse-col\">\n            <span className=\"wwse-percentage wwse-percentage-i1600 wwse-result-percentage\">100%</span>\n          </div>\n        </div>\n      </div>\n      {annualCost - futureCost > 0 ? (\n        <div className=\"wwse-col wwse-col-savings\">\n          <h2 className=\"wwse-results-business-heading\">Total Projected Savings</h2>\n          <span className=\"wwse-results-business-sub-heading\">\n            While Covering All Employees\n          </span>\n          <span className=\"wwse-results-business-total\">\n            <em>${addCommas(annualCost - futureCost)}</em>/year <sup>*</sup>\n          </span>\n          <div className=\"wwse-results-disclaimer\">\n            <span>\n              <em>\n                <sup>*</sup> Results vary based on company size and individual differences in Gross&nbsp;Pay\n              </em>\n            </span>\n          </div>\n          <CalculationDocs/>\n        </div>\n      ) : (\n        <div className=\"wwse-col wwse-col-savings\">\n          <h2 className=\"wwse-results-business-heading\">Total Contribution</h2>\n          <span className=\"wwse-results-business-sub-heading\">\n            (To Cover All Employees)\n          </span>\n          <span className=\"wwse-results-business-total wwse-results-business-total-no-savings\">\n            <em>${addCommas(parseInt(futureCost / 12, 10))}</em>/month <sup>*</sup>\n          </span>\n          <span className=\"wwse-results-total-year\">\n            (${addCommas(futureCost)}/year)\n          </span>\n          <div className=\"wwse-results-disclaimer\">\n            <span>\n              <em>\n                <sup>*</sup> Results vary based on company size and individual differences in Gross Pay. \n              </em>\n            </span>\n          </div>\n          <CalculationDocs/>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default BusinessResults;\n","import React from 'react';\n\nconst MessageBox = () => {\n  const url = 'https://d3n8a8pro7vhmx.cloudfront.net/wholewashington/pages/144/attachments/original/1522975117/Yes1600Credo.pdf?1522975117';\n  return(\n    <div className=\"wwse-message-box\">\n    {/*\n      <p>\n        <a href={url} rel=\"noopener noreferrer\" target=\"_blank\">\n        Universal Healthcare\n        </a> means high quality, comprehensive care (including dental and vision) for \n        every Washington resident. It means fair and dedicated taxes are used to fund \n        our healthcare, instead of escalating insurance costs with unpredictable \n        out-of-pocket expenses. It means we can focus on our health and have the \n        freedom to pursue our dreams.\n      </p>\n     */}\n    </div>\n  );\n}\n\nexport default MessageBox;\n","import React from 'react';\nimport { addCommas } from '../helpers/helper-functions';\n\nconst MONTH = 12;\nconst ContributionsRow = ({link, title, contribution}) => {\n  return(\n    <div className=\"wwse-contributions-row\">\n      <p className=\"wwse-contributions-row-heading\">\n        <a\n        href={link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        >\n          {title}\n        </a>\n      </p>\n      <p className=\"wwse-contributions-row-result\">\n        ${addCommas(Math.floor(contribution / MONTH))}/month\n      </p>\n    </div>\n  )\n}\n\nexport default ContributionsRow;\n","import React from \"react\";\nimport { addCommas } from '../helpers/helper-functions';\nimport MessageBox from './MessageBox';\nimport ContributionsRow from './ContributionsRow';\n\nconst CalculationDocs = () => {\n  return(\n    <a style={{fontSize:'0.9em', margin:'1.5em auto'}} href=\"https://wholewashington.nationbuilder.com/savings_estimator_individual_calculations\" rel=\"noopener noreferrer\" target=\"_blank\">Calculation Documentation</a>\n  );\n};\n\nconst IndividualResults = ({\n  results: {\n    sizeOfHousehold,\n    currentCosts,\n    totalPersonalContribution,\n    income,\n    capitalGainsContribution,\n    premium,\n    savings,\n    numberOfAdults,\n    healthcareContributionFromWages,\n    healthcareContributionFromSelfEmployment\n  }}) => {\n\n  const MONTH = 12;\n  return(\n    <div className=\"wwse-results\">\n      <div className=\"wwse-results-total-box wwse-results-box-new\">\n        <div\n          className={`wwse-results-header wwse-results-header-new ${savings > 0 ? 'new-cost' :''}`}\n          key=\"savings-label\"\n        >\n          {savings > 0 ? \n            <div>\n              <h3>CONGRATULATIONS!</h3>\n              <h3>TOTAL SAVINGS!</h3>\n            </div> :\n            <div>\n              <h3>YOUR BENEFIT</h3>\n            </div>\n          }\n          </div>\n        {savings > 0 ?\n        <div className=\"wwse-results-total\" key=\"savings-value\">\n          <p className=\"wwse-results-total-top wwse-results-total-total\">\n            ${addCommas(Math.floor(savings / MONTH))}/month</p>\n          <p className=\"wwse-results-total-bottom\">(${savings}/year)</p>\n        </div> : ''\n        }\n      </div>\n      <MessageBox key=\"ind-nosavings-result\"/>\n\n      <div className=\"wwse-results-box\">\n        <div className=\"wwse-results-header\">\n          <h3>Your <strong>Current</strong> Cost</h3>\n        </div>\n\n        <div className=\"wwse-results-total\">\n          <p className=\"wwse-results-total-top wwse-results-total-current\">\n            ${addCommas(Math.floor(currentCosts))}/month\n          </p>\n          <p className=\"wwse-results-total-bottom\">\n            (${addCommas(currentCosts*12)}/year)\n          </p>\n        </div>\n      </div>\n\n      <div className=\"wwse-results-box wwse-results-box-new\">\n        <div className=\"wwse-results-header wwse-results-header-new\">\n          <h3><strong>New</strong> Projected Cost</h3>\n        </div>\n\n        <div className=\"wwse-results-total wwse-results-total-new\">\n          <p className=\"wwse-results-total-top wwse-results-total-projected\">\n            $\n            { sizeOfHousehold < 2 ?\n              addCommas(Math.floor(totalPersonalContribution / MONTH))\n              :\n              addCommas(Math.floor(\n                (parseInt(capitalGainsContribution, 10) +\n                parseInt(income, 10) +\n                parseInt(premium, 10) *\n                parseInt(numberOfAdults, 10))\n              ))\n            }\n            /year\n          </p>\n          <p className=\"wwse-results-total-bottom\">\n            ($\n              { sizeOfHousehold < 2 ?\n                addCommas(totalPersonalContribution)\n                :\n                addCommas(Math.floor(\n                  parseInt(capitalGainsContribution, 10) +\n                  parseInt(income, 10) +\n                  parseInt(premium, 10) *\n                  parseInt(numberOfAdults, 10)\n                ))\n              }\n              /year)\n          </p>\n        </div>\n      </div>\n\n      <div className=\"wwse-results-total-box\">\n        <div className=\"wwse-results-header wwse-results-header-contributions\">\n          <h3>PERSONAL HEALTH ASSESSMENT</h3>\n        </div>\n        <div className=\"wwse-results-contributions-container\">\n          <ContributionsRow\n            title=\"Healthcare Contribution from Wages\"\n            contribution={parseInt(healthcareContributionFromWages)}\n          />\n          <ContributionsRow\n            title=\"Healthcare Contribution from Self Employment\"\n            contribution={parseInt(healthcareContributionFromSelfEmployment)}\n          />\n        </div>\n      </div>\n\n      <div className=\"wwse-results-total-box\">\n        <div className=\"wwse-results-header wwse-results-header-contributions\">\n          <h3>PROJECTED CONTRIBUTIONS</h3>\n        </div>\n        <div className=\"wwse-results-contributions-container\">\n\n          <ContributionsRow\n            link=\"https://i1600-wholewashington.nationbuilder.com/investment_profit_contribution\"\n            title=\"Investment Profit Contribution\"\n            contribution={capitalGainsContribution}\n          />\n\n          {\n          sizeOfHousehold > 1 &&\n          parseInt(sizeOfHousehold, 10) -\n          parseInt(numberOfAdults, 10) >\n          0 &&\n          (\n            <div className=\"wwse-contributions-row\">\n              <p className=\"wwse-contributions-row-heading\">Per Child Monthly Premium</p>\n              <p className=\"wwse-contributions-row-result\">\n                FREE x{\" \"}\n                {parseInt(sizeOfHousehold, 10) -\n                  parseInt(numberOfAdults, 10)}\n                </p>\n              </div>\n            )\n          }\n\n            <div className=\"wwse-contributions-row\">\n              <p className=\"wwse-contributions-row-heading\">\n                <a href=\"https://i1600-wholewashington.nationbuilder.com/monthly_premium\" target=\"_blank\" rel=\"noopener noreferrer\">Per Adult Monthly Premium</a><sup>*</sup>\n              </p>\n              <p className=\"wwse-contributions-row-result\">\n                $\n                {\n                  addCommas(Math.floor(premium / MONTH))\n                }\n                /month {\n                  sizeOfHousehold > 1 &&\n                  `x${numberOfAdults}`\n                }\n              </p>\n            </div>\n            <p className=\"wwse-premium-disclaimer\">\n              <sup>*</sup> Employers may choose to pay the Monthly Premium as part of their benefits.\n            </p>\n          </div>\n        </div>\n\n      <CalculationDocs/>\n    </div>\n  )\n}\nexport default IndividualResults;\n","import React, { Component } from 'react';\nimport BusinessResults from './BusinessResults';\nimport IndividualResults from './IndividualResults';\nimport { removeCommas, rmDecAndRound } from '../helpers/helper-functions';\nimport { connect } from 'react-redux';\nimport { getIndividualResults, getBusinessResults } from '../actions';\n\nclass Results extends Component {\n\n  // call getResult function before component mounts to hydrate state with results\n\tcomponentWillMount() {\n\t\tthis.getResult();\n\t}\n\n\tgetResult = () => {\n    const { vars, userType } = this.props;\n    // conditionally get either business or individual results returned to our results object\n    // use helper func to prepare data by stripping any decimals and round\n\t\tif (userType === 'business') {\n\t\t\tthis.props.getBusinessResults(\n        rmDecAndRound(vars[2]),\n        rmDecAndRound(vars[0])\n      );\n\t\t}\n\t\telse {\n\t\t\t// These correspond to the 9 question-screens.  For coding simplicitly, we're\n\t\t\t// counting the 9th screen as a question-screen, even though it's purely informational.\n\t\t\tthis.props.getIndividualResults(\n        rmDecAndRound(vars[0]),\n        rmDecAndRound(vars[1]),\n        rmDecAndRound(vars[2]),\n        rmDecAndRound(vars[3]),\n        rmDecAndRound(vars[4]),\n        rmDecAndRound(vars[5]),\n        rmDecAndRound(vars[6]),\n        rmDecAndRound(vars[7]),\n        rmDecAndRound(vars[8]),\n      );\n\t\t}\n\t}\n\n\trender() {\n    const { results, userType, vars, range } = this.props;\n\n\t\tif (userType === 'business') {\n      if(!results.futureCost) return null;\n\n      const colorBarGreen = {\n        width: `${parseInt((results.futureCost / removeCommas(vars[1])) * 100, 10) + 10}%`\n      };\n\n      let rangeStyle = {\n\t\t\t\tfontSize: `${1 + range / 100}em`,\n\t\t\t\twidth: `${1}em`,\n\t\t\t\theight: `${1}em`\n\t\t\t};\n\n      return (\n\t\t\t\t// Business Results\n\t\t\t\t\t<BusinessResults\n\t\t\t\t\t\tcolorBarGreen={colorBarGreen}\n\t\t\t\t\t\trangeStyle={rangeStyle}\n\t\t\t\t\t\tvars={vars}\n\t\t\t\t\t\tresults={results}\n\t\t\t\t\t\trange={range}\n\t\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t// Individual Results\n\t\t\t\t<IndividualResults\n\t\t\t\t\tresults={results}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n};\n\nfunction mapStateToProps(state){\n  return{\n    userType: state.userType,\n    vars: state.vars,\n    range: state.range,\n    results: state.results\n  }\n}\n\nexport default connect(mapStateToProps, {getBusinessResults, getIndividualResults})(Results);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setUserType, incIndex } from '../actions';\n\nclass StartCard extends Component {\n\n  handleUserType = (e) => {\n    e.preventDefault();\n    this.props.setUserType(e.target.value);\n    this.props.incIndex();\n  }\n\n  render() {\n    return [\n      <button\n        key=\"wwse-button-individual\"\n        className=\"wwse-select-button\"\n        onClick={this.handleUserType}\n        type=\"submit\"\n        value=\"individual\">\n        I'm an Individual\n      </button>,\n\n      <div className=\"wwse-select-box\" key=\"wwse-box-individual\">\n        <div className=\"wwse-info-icon\"><i className=\"fa fa-2x fa-info-circle\"></i></div>\n        <p>\n        <span className=\"h4\">Individuals:</span> \n          To get the most accurate results, you'll need:\n          </p>\n            \n            <ul>\n              <li> Last year's tax return</li>\n              <li> A pay stub for each wage earner in the household</li>\n              <li> A pay stub or statement showing your insurance premium amount (if applicable)</li>\n              <li> Estimate of your out-of-pocket healthcare costs</li>\n            </ul>\n\n          <strong>Update:</strong> This calculator provides an <b>estimate</b> of how&nbsp; \n          <b>Universal Healthcare through the Whole Washington Health Trust</b> would\n          impact your bottom line.  If you have significant partnership or capital income\n          (e.g. more than $15,000 a year), you may want to consult a tax professional\n          for a complete assessment.\n      </div>,\n\n      <button\n        key=\"wwse-button-business\"\n        className=\"wwse-select-button\"\n        onClick={this.handleUserType}\n        type=\"submit\"\n        value=\"business\">\n        I'm a Business Owner with Employees\n      </button>,\n\n      <div className=\"wwse-select-box\" key=\"wwse-box-business\">\n        <div className=\"wwse-info-icon\"><i className=\"fa fa-2x fa-info-circle\"></i></div>\n        <p>\n        <span className=\"h4\">Business Owners:</span> Using your current payroll and healthcare costs, we'll provide a high-level estimate of projected healthcare costs.\n        </p>\n      </div>,\n\n      <div className=\"wwse-disclaimer\" key=\"wwse-disclaimer\">\n        <p>\n          This calculator provides an <strong>estimate</strong> of how I-1600 would impact your bottom line. If you have significant partnership or capital income (e.g. more than $15,000 a year), you may want to consult a tax professional for a more complete assessment.\n        </p>\n      </div>\n    ];\n  }\n};\n\n\nexport default connect(null, { setUserType, incIndex })(StartCard);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ErrorContainer = ({ error }) => {\n  return(\n\t\t<div className=\"wwse-error-container\">\n      {error && <p className=\"wwse-error\">{error}</p>}\n\t\t</div>\n  )\n}\n\nfunction mapStateToProps(state){\n  return{\n    error: state.error\n  }\n}\n\nexport default connect(mapStateToProps)(ErrorContainer);\n","import React, { Component } from 'react';\n\n// Import Components\n\nimport Question from './components/Question';\nimport ProgressBar from './components/ProgressBar';\nimport Results from './components/Results';\nimport StartCard from './components/StartCard';\nimport questions from './questions';\nimport ErrorContainer from './components/ErrorContainer';\nimport './wwse.css';\n\n// Import Redux Stuff\nimport { connect } from 'react-redux';\nimport * as actions from './actions';\n\nclass App extends Component {\n  // The app works by tracking a position (index) in an array of supplied questions\n  // Index is initialized to -1\n  // If at any point index === -1 that means we are at the beginning and should dump our data and reset our userType\n  componentWillUpdate(nextProps){\n    if(nextProps.index===-1){\n      this.props.setUserType('');\n      if(this.props.vars.length !== 0){\n        this.props.setVars([]);\n      }\n    }\n  }\n\n\trender() {\n    const { userType, index, questionArray } = this.props;\n\n    const app_position = {\n      start: userType === '',\n      question: index > -1 && index < questionArray.length,\n      progress: index > -1 && index !== questionArray.length,\n      end: index > -1 && index === questionArray.length\n    }\n\n\t\treturn (\n\t\t\t<div className={!app_position.end ? \"wwse-app-container\" : \"wwse-results-container\"}>\n        <ErrorContainer/>\n\t\t\t\t{\n          app_position.start &&\n          <StartCard/>\n\t\t\t\t}\n\t\t\t\t{\n          app_position.question &&\n\t\t\t\t\t<Question question={questionArray[index]} />\n\t\t\t\t}\n\t\t\t\t{\n          app_position.progress &&\n\t\t\t\t\t<ProgressBar />\n\t\t\t\t}\n\t\t\t\t{\n          app_position.end &&\n\t\t\t\t\t<Results />\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state){\n  return {\n    userType: state.userType,\n    index: state.index,\n    questionArray: questions[state.userType],\n    vars: state.vars\n  }\n}\nexport default connect(mapStateToProps, actions)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from './reducers';\nimport App from './App';\nimport \"./index.css\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>\n  , root\n);\n"],"sourceRoot":""}